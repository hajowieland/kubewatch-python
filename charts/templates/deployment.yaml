apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "python-kubewatch.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "python-kubewatch.name" . }}
    helm.sh/chart: {{ include "python-kubewatch.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "python-kubewatch.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "python-kubewatch.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SLACK_WEBHOOK
              value: {{ .Values.slackWebhook | quote }}
            - name: ENABLE_CLUSTERROLES
              value: {{ .Values.kubeResources.clusterroles | quote }}
            - name: ENABLE_CLUSTERROLEBINDINGS
              value: {{ .Values.kubeResources.clusterrolebindings | quote }}
            - name: ENABLE_CONFIGMAPS
              value: {{ .Values.kubeResources.configmaps | quote }}
            - name: ENABLE_CRONJOBS
              value: {{ .Values.kubeResources.cronjobs | quote }}
            - name: ENABLE_DAEMONSETS
              value: {{ .Values.kubeResources.daemonsets | quote }}
            - name: ENABLE_DEPLOYMENTS
              value: {{ .Values.kubeResources.deployments | quote }}
            - name: ENABLE_INGRESSES
              value: {{ .Values.kubeResources.ingresses | quote }}
            - name: ENABLE_JOBS
              value: {{ .Values.kubeResources.jobs | quote }}
            - name: ENABLE_LIMITRANGES
              value: {{ .Values.kubeResources.limitranges | quote }}
            - name: ENABLE_NETWORKPOLICIES
              value: {{ .Values.kubeResources.networkpolicies | quote }}
            - name: ENABLE_NODES
              value: {{ .Values.kubeResources.nodes | quote }}
            - name: ENABLE_PODS
              value: {{ .Values.kubeResources.pods | quote }}
            - name: ENABLE_PODSECURITYPOLICIES
              value: {{ .Values.kubeResources.podsecuritypolicies | quote }}
            - name: ENABLE_PODDISRUPTIONBUDGETS
              value: {{ .Values.kubeResources.poddisruptionbudgets | quote }}
            - name: ENABLE_PODTEMPLATES
              value: {{ .Values.kubeResources.podtemplates | quote }}
            - name: ENABLE_PERSISTENTVOLUMES
              value: {{ .Values.kubeResources.persistentvolumes | quote }}
            - name: ENABLE_PERSISTENTVOLUMECLAIMS
              value: {{ .Values.kubeResources.persistentvolumeclaims | quote }}
            - name: ENABLE_REPLICASETS
              value: {{ .Values.kubeResources.replicasets | quote }}
            - name: ENABLE_RESOURCEQUOTAS
              value: {{ .Values.kubeResources.resourcequotas | quote }}
            - name: ENABLE_ROLES
              value: {{ .Values.kubeResources.roles | quote }}
            - name: ENABLE_ROLEBINDINGS
              value: {{ .Values.kubeResources.rolebindings | quote }}
            - name: ENABLE_SERVICE
              value: {{ .Values.kubeResources.services | quote }}
            - name: ENABLE_SERVICEACCOUNTS
              value: {{ .Values.kubeResources.serviceaccounts | quote }}
            - name: ENABLE_SECRETS
              value: {{ .Values.kubeResources.secrets | quote }}
            - name: ENABLE_STATEFULSETS
              value: {{ .Values.kubeResources.statefulsets | quote }}
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
